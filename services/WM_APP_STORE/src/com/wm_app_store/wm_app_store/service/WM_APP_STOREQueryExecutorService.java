/*Copyright (c) 2015-2016 imaginea.com All Rights Reserved.
 This software is the confidential and proprietary information of imaginea.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with imaginea.com*/
package com.wm_app_store.wm_app_store.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Timestamp;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportOptions;

import com.wm_app_store.wm_app_store.models.query.*;

public interface WM_APP_STOREQueryExecutorService {

    Page<AppSourceResponse> executeAPP_SOURCE(Pageable pageable);
<<<<<<< HEAD
=======

    void exportAPP_SOURCE(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AvgRatingResponse> executeAvgRating(Pageable pageable);

    void exportAvgRating(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AppInfoResponse> executeAPP_INFO(Pageable pageable);

    InputStream getImageContentForAPP_INFO(Integer id, String _desc, Integer categoryId, String createdBy, Timestamp creationDate, Timestamp lastUpdateDate, String name, String updatedBy) throws EntityNotFoundException;

    void exportAPP_INFO(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AppScreenshotsResponse> executeAPP_SCREENSHOTS(Pageable pageable);

    void exportAPP_SCREENSHOTS(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);
>>>>>>> stash

    void exportAPP_SOURCE(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AppScreenshotsResponse> executeAPP_SCREENSHOTS(Pageable pageable);

    void exportAPP_SCREENSHOTS(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<AppInfoResponse> executeAPP_INFO(Pageable pageable);

    InputStream getImageContentForAPP_INFO(Integer id, String _desc, Integer categoryId, String createdBy, Timestamp creationDate, Timestamp lastUpdateDate, String name, String updatedBy) throws EntityNotFoundException;

    void exportAPP_INFO(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}