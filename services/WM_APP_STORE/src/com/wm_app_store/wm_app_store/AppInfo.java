/*Copyright (c) 2015-2016 imaginea.com All Rights Reserved.
 This software is the confidential and proprietary information of imaginea.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with imaginea.com*/
package com.wm_app_store.wm_app_store;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.wavemaker.runtime.data.annotations.WMValueInject;
import com.wavemaker.runtime.data.replacers.Scope;
import com.wavemaker.runtime.data.replacers.providers.VariableType;

/**
 * AppInfo generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`APP_INFO`")
public class AppInfo implements Serializable {

    private Integer id;
    private String name;
    private String _desc;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] image;
    private String createdBy;
    private LocalDateTime creationDate;
    @WMValueInject( type = VariableType.SERVER, name = "USER_NAME", scopes = { Scope.UPDATE, Scope.INSERT })
    private String updatedBy;
    @WMValueInject( type = VariableType.SERVER, name = "DATE_TIME", scopes = { Scope.UPDATE, Scope.INSERT })
    private LocalDateTime lastUpdateDate;
    private Integer categoryId;
    private MdCategory mdCategory;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`NAME`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`DESC`", nullable = true, length = 2000)
    public String get_desc() {
        return this._desc;
    }

    public void set_desc(String _desc) {
        this._desc = _desc;
    }

    @Column(name = "`IMAGE`", nullable = true)
    public byte[] getImage() {
        return this.image;
    }

    public void setImage(byte[] image) {
        this.image = image;
    }

    @Column(name = "`CREATED_BY`", nullable = true, length = 255)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "`CREATION_DATE`", nullable = true)
    public LocalDateTime getCreationDate() {
        return this.creationDate;
    }

    public void setCreationDate(LocalDateTime creationDate) {
        this.creationDate = creationDate;
    }

    @Column(name = "`UPDATED_BY`", nullable = true, length = 255)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Column(name = "`LAST_UPDATE_DATE`", nullable = true)
    public LocalDateTime getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(LocalDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @Column(name = "`CATEGORY_ID`", nullable = true, scale = 0, precision = 10)
    public Integer getCategoryId() {
        return this.categoryId;
    }

    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`CATEGORY_ID`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_APP_INFO_TO_MD_CATEGORNNgP`"))
    @Fetch(FetchMode.JOIN)
    public MdCategory getMdCategory() {
        return this.mdCategory;
    }

    public void setMdCategory(MdCategory mdCategory) {
        if(mdCategory != null) {
            this.categoryId = mdCategory.getId();
        }

        this.mdCategory = mdCategory;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AppInfo)) return false;
        final AppInfo appInfo = (AppInfo) o;
        return Objects.equals(getId(), appInfo.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}